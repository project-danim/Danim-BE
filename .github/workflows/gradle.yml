
name: Java CI/CD with Docker


on:
  push:
    branches:
      - release
      - 'release/**'

#  pull_request_target:
#    branches: [ "develop" ]
# 하지마.


jobs:
  build:
    # 실행 환경 지정
    runs-on: ubuntu-latest
    environment:
      name: Danim # 변경할 환경의 이름
    # Task의 sequence를 명시한다.
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

#      - name: Setup MySQL
#        uses: mirromutth/mysql-action@v1.1
#        with:
#          host port: 8080
#          container port: 3306
#          mysql version: '8.0.33'
#          mysql database: mydatabase
#          mysql user: ${{ secrets.DB_USERNAME }}
#          mysql password: ${{ secrets.DB_PASSWORD }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - run: mkdir -p ./src/main/resources/
      - run: touch ./src/main/resources/application.properties
      - name: jasypt key주입
        run: echo "jasypt.password=${{ secrets.JASYPT }}" >> ./src/main/resources/application.properties
      - run: echo "${{ secrets.PROPERTIES }}" >> ./src/main/resources/application.properties
      - run: cat ./src/main/resources/application.properties

      - name: Build
        run: ./gradlew clean build
        env:
          JASYPT_PASSWORD: ${{ secrets.JASYPT }}
      - name: Test
        run: ./gradlew test
        env:
          JASYPT_PASSWORD: ${{ secrets.JASYPT }}

      # DockerHub 로그인
      - name: DockerHub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME}}
          password: ${{ secrets.DOCKERHUB_PASSWORD}}

      # Docker 이미지 빌드
      - name: Docker Image Build
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME}}/${{ secrets.PROJECT_NAME }} .

      # DockerHub Push
      - name: DockerHub Push
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.PROJECT_NAME }}

      # EC2 인스턴스 접속 및 애플리케이션 실행
      - name: Application Run
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}

          script: |
            sudo docker kill ${{ secrets.PROJECT_NAME }}
            sudo docker rm -f ${{ secrets.PROJECT_NAME }}
            sudo docker rmi ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.PROJECT_NAME }}
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.PROJECT_NAME }}

            sudo docker run -p ${{ secrets.PORT }}:${{ secrets.PORT }} \
            --name ${{ secrets.PROJECT_NAME }} \
            -d ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.PROJECT_NAME }}
        #      -e SPRING_DATASOURCE_URL=${{ secrets.DB_URL }} \
        #     -e SPRING_DATASOURCE_USERNAME=${{ secrets.DB_USERNAME }} \
        #    -e SPRING_DATASOURCE_PASSWORD=${{ secrets.DB_PASSWORD }} \
